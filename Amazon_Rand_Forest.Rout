
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Load necessary libraries
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.4     ✔ readr     2.1.5
✔ forcats   1.0.0     ✔ stringr   1.5.1
✔ ggplot2   3.5.1     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.1
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──
✔ broom        1.0.7     ✔ rsample      1.2.1
✔ dials        1.3.0     ✔ tune         1.2.1
✔ infer        1.0.7     ✔ workflows    1.1.4
✔ modeldata    1.4.0     ✔ workflowsets 1.1.0
✔ parsnip      1.2.1     ✔ yardstick    1.3.1
✔ recipes      1.1.0     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()
• Use suppressPackageStartupMessages() to eliminate package startup messages
> library(vroom)

Attaching package: ‘vroom’

The following object is masked from ‘package:yardstick’:

    spec

The following object is masked from ‘package:scales’:

    col_factor

The following objects are masked from ‘package:readr’:

    as.col_spec, col_character, col_date, col_datetime, col_double,
    col_factor, col_guess, col_integer, col_logical, col_number,
    col_skip, col_time, cols, cols_condense, cols_only, date_names,
    date_names_lang, date_names_langs, default_locale, fwf_cols,
    fwf_empty, fwf_positions, fwf_widths, locale, output_column,
    problems, spec

> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> library(embed)
> library(themis)
> 
> ## Random Forest Model ##
> 
> # Read in data
> train_data <- vroom('train.csv')
Rows: 32769 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (10): ACTION, RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTN...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> test_data <- vroom('test.csv')
Rows: 58921 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (10): id, RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTNAME,...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> 
> # Change ACTION to factors
> train_data <- train_data %>% 
+   mutate(ACTION = as.factor(ACTION))
> 
> # Create a recipe
> rand_forest_recipe <- recipe(ACTION ~ ., data = train_data) %>% 
+   step_mutate_at(all_predictors(), fn = factor) %>% 
+   step_other(all_nominal_predictors(), threshold = .001, other = 'Other') %>% 
+   step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>% 
+   step_normalize(all_numeric_predictors())
> 
> # Create random forest model
> rand_forest_model <- rand_forest(mtry = tune(),
+                                  min_n = tune(),
+                                  trees = 1000) %>% 
+   set_engine('ranger') %>% 
+   set_mode('classification')
> 
> # Set workflow
> rand_forest_wf <- workflow() %>% 
+   add_recipe(rand_forest_recipe) %>% 
+   add_model(rand_forest_model)
> 
> # Grid of values to tune over
> prep(rand_forest_recipe) %>% bake(train_data) %>% ncol() # = 10
[1] 10
> rand_forest_grid_params <- grid_regular(mtry(range = c(1, 10)),
+                                         min_n(),
+                                         levels = 10)
> 
> # Split data for cross validation
> folds <- vfold_cv(train_data, v = 10, repeats = 1)
> 
> # Set up parallel computing
> num_cores <- detectCores()
> cl <- makePSOCKcluster(15)
> registerDoParallel(15)
> 
> # Run the cv
> cv_results <- rand_forest_wf %>% 
+   tune_grid(resamples = folds,
+             grid = rand_forest_grid_params,
+             metrics = metric_set(roc_auc))
! Fold07: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 10/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 20/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 30/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 40/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 50/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 60/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 70/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 80/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 90/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold07: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold02: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold09: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold01: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold10: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold05: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold04: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold06: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold08: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
! Fold03: preprocessor 1/1, model 100/100: 10 columns were requested but there were 9 predictors in the data. 9 wil...
> 
> # Find best tuning params
> best_params <- cv_results %>% 
+   select_best(metric = 'roc_auc')
> 
> # Finalize workflow and fit it
> final_wf <- rand_forest_wf %>% 
+   finalize_workflow(best_params) %>% 
+   fit(data = train_data)
> 
> # Predict and format for submission
> rand_forest_preds <- predict(final_wf, 
+                      new_data = test_data,
+                      type = "prob") %>% 
+   mutate(id = row_number(), ACTION = .pred_1) %>% 
+   select(id, ACTION)
> 
> # End parallel computing
> stopCluster(cl)
> 
> # Write out the file
> vroom_write(x = rand_forest_preds, file = "./Random_Forest.csv", delim = ",")
> 
> # Score: 0.87473
> # Score with PCA: 0.84959
> # Score with SMOTE algorithm: 0.86158
> 
> proc.time()
     user    system   elapsed 
30203.930   493.424  3017.394 
